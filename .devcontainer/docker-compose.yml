services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  webapp:
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer 
    # folder. Note that the path of the Dockerfile and context is relative to the *primary* 
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    # build:
    #   context: .
    #   dockerfile: .devcontainer/Dockerfile
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
    container_name: auth-course
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ./starter_code:/app:cached
      # - ~/mypackage/apache-maven-3.9.8:/opt/apache-maven-3.9.8:cached
      # - ./.m2:/~/.m2:cached
    environment:
      - INSTALL_MAVEN=false
      # - M2_HOME=/opt/apache-maven-3.9.8
    ports:
      - "3086:8080"
    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
 
networks:
  default:
    name: docker-application
    external: true
    # Health check to confirm availability of ES. Other containers wait on this.